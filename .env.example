# Deployment Environment:
NODE_ENV=development

# NextJS
NEXT_PUBLIC_BACKEND_URL=http://localhost:3000
PLATFORM_URL=http://host.docker.internal:8000 # Used for the backend migration
NEXT_PUBLIC_FORCE_AUTH=false  # Forces auth to click "Deploy"

# Websearch. Fill both of these values to enable it locally
NEXT_PUBLIC_WEB_SEARCH_ENABLED=false  # Disables the ability to toggle web search
SERP_API_KEY=*** # https://serper.dev/ for an API key

# Next Auth config:
# Generate a secret with `openssl rand -base64 32`, or visit https://generate-secret.vercel.app/
NEXTAUTH_SECRET=changeme
NEXTAUTH_URL=http://localhost:3000

# Auth providers. Required to enable sign in, in production. Development mode uses local auth.
GOOGLE_CLIENT_ID=***
GOOGLE_CLIENT_SECRET=***
GITHUB_CLIENT_ID=***
GITHUB_CLIENT_SECRET=***
DISCORD_CLIENT_SECRET=***
DISCORD_CLIENT_ID=***

# Database (Configured through docker-compose)
DATABASE_USER=reworkd_platform
DATABASE_PASSWORD=reworkd_platform
DATABASE_HOST=db
DATABASE_PORT=3306
DATABASE_NAME=reworkd_platform
DATABASE_URL="mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}"

# Backend
REWORKD_PLATFORM_FF_MOCK_MODE_ENABLED=false # Will mock calls to the OpenAI
REWORKD_PLATFORM_OPENAI_API_KEY=changeme  # Used for the Python backend
REWORKD_PLATFORM_FRONTEND_URL=http://localhost:3000
REWORKD_PLATFORM_RELOAD=true  # Controls hot reload for the backend
REWORKD_PLATFORM_OPENAI_API_BASE="https://api.openai.com/v1"

# External APIs:
OPENAI_API_KEY=changeme # Used while the backend is still in TypeScript
OPENAI_API_BASE="https://api.openai.com/v1"
